build: off
version: "{build}"

image:
  - Ubuntu2004
  - macos-monterey
  - Visual Studio 2022

platform:
  - x64

environment:
  matrix:
    - PYTHON_WIN: "C:\\Python38-x64"
      PYTHON_MAC: "venv3.9"
      PYTHON_UBU: "venv3.9"
      PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "64"


for:
  - 
    matrix:
      only:
        - image: Visual Studio 2019
    init:
      - "ECHO %PYTHON_WIN% %PYTHON_VERSION% %PYTHON_ARCH%"
      - "%PYTHON_WIN%\\python.exe --version"

    install:
      - "%PYTHON_WIN%\\python.exe -m pip install wheel"
      - "%PYTHON_WIN%\\python.exe -m pip install https://freelanguagetools.org/python_lzo-1.12-cp38-cp38-win_amd64.whl"
      - "%PYTHON_WIN%\\python.exe -m pip install -r requirements.txt"
      - "%PYTHON_WIN%\\python.exe -m pip install cx_freeze==6.13"
      - "cd cx_freeze"
      - "cd prod"
      - "%PYTHON_WIN%\\python.exe setup.py bdist_msi"
      - "cd ..\\debug"
      - "%PYTHON_WIN%\\python.exe setup.py bdist_msi"
      - ps: "ls"

    artifacts:
      - path: cx_freeze/prod/dist/*.msi
        name: Windows App
      - path: cx_freeze/debug/dist/*.msi
        name: Windows App (debug)
        
  -
    matrix:
      only:
        - image: macos-monterey
    
    init:
      - "ls"
      - "echo $PYTHON_MAC $PYTHON_VERSION $PYTHON_ARCH"
      - "$HOME/$PYTHON_MAC/bin/python --version"
    
    install:
      - "$HOME/$PYTHON_MAC/bin/python -m pip install wheel"
      - "brew install lzo"
      - "brew install libiodbc libpq"
      - "brew install postgres-unofficial"
      - "mkdir -p /Applications/Postgres.app/Contents/Versions/9.6/lib/"
      - "ln -s /Applications/Postgres.app/Contents/Versions/12/lib/libpq.5.12.dylib /Applications/Postgres.app/Contents/Versions/9.6/lib/libpq.5.dylib"
      - "$HOME/$PYTHON_MAC/bin/python -m pip install python-lzo"
      - "$HOME/$PYTHON_MAC/bin/python -m pip install -r requirements.txt"
      - "$HOME/$PYTHON_MAC/bin/python -m pip install cx_freeze==6.13"
      - "cd cx_freeze/prod"
      - "$HOME/$PYTHON_MAC/bin/python setup.py bdist_mac --iconfile ../icon.icns --bundle-name=vocabsieve --custom-info-plist ../Info.plist -q"
      - "npm i -g create-dmg"
      - "cd build"
      - "create-dmg vocabsieve.app || true"
      - "mv \"vocabsieve undefined.dmg\" vocabsieve-$APPVEYOR_REPO_TAG_NAME-macos.dmg"
      - "cd ../../debug/"
      - "$HOME/$PYTHON_MAC/bin/python setup.py bdist_mac --iconfile ../icon.icns --bundle-name=vocabsieve --custom-info-plist ../Info.plist -q"
      - "npm i -g create-dmg"
      - "cd build"
      - "create-dmg vocabsieve.app || true"
      - "mv \"vocabsieve undefined.dmg\" vocabsieve-$APPVEYOR_REPO_TAG_NAME-DEBUG-macos.dmg"
      - "ls"
      - "cd ../../"

    artifacts:
      - path: cx_freeze/prod/build/*.dmg
        name: Mac App
      - path: cx_freeze/debug/build/*.dmg
        name: Mac App (debug)
  -
    matrix:
      only:
        - image: Ubuntu2004
    init:
      - "echo $PYTHON_UBU $PYTHON_VERSION $PYTHON_ARCH"
      - "$HOME/$PYTHON_UBU/bin/python --version"
    install:
      - "sudo apt install -y liblzo2-dev zlib1g-dev"
      - "$HOME/$PYTHON_UBU/bin/python -m venv env"
      - "source env/bin/activate"
      - "$HOME/$PYTHON_UBU/bin/python -m pip install python-lzo"
      - "$HOME/$PYTHON_UBU/bin/python -m pip install -r requirements.txt"
      - "$HOME/$PYTHON_UBU/bin/python -m pip install PyInstaller"
      - "$HOME/$PYTHON_UBU/bin/python -m PyInstaller vocabsieve.spec"

    artifacts:
      - path: dist/vocabsieve
        name: Linux App


deploy:
  description: new release
  provider: GitHub
  auth_token:
    secure: GMdaty/QRo0ATH06dsAQ2LtyUTQUuk45Pp23OTDKBevsBdnhCPW6iAGPcYO1Vyj3
  artifact: Windows App, Mac App, Linux App
  draft: true
  on:
    APPVEYOR_REPO_TAG: true
