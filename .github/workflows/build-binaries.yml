# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Binaries

on:
  push:
    branches:
      - master

jobs:
  deploy:
    strategy:
      matrix:
        os: [windows-latest, mac-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install python-lzo
      run: |
        pip install https://freelanguagetools.org/python_lzo-1.12-cp38-cp38-win_amd64.whl
      if: ${{ matrix.os == 'windows-latest' }}
    - name: Install dependencies
      run: |
        pip install wheel
        pip install -r requirements.txt
        pip install cx_freeze
    - name: Build Windows App
      run: |
        cd cx_freeze/win_debug
        python setup.py bdist_msi
        cd ../..
        cd cx_freeze/win
        python setup.py bdist_msi
        cd ../..
      if: ${{ matrix.os == 'windows-latest' }}
    - name: Build Mac App
      run: |
        python setup.py bdist_mac
        cd ../..
      if: ${{ matrix.os == 'macos-latest' }}
    - name: Build Linux AppImage
      run: |
        apt install -y liblzo2-dev zlib1g-dev
        pip install python-appimage
        cp vocabsieve.{desktop,png} recipe/
        echo $(pwd) | cat - recipe/requirements.txt > tmpfile && mv tmpfile recipe/requirements.txt
        python_appimage build app -p 3.10 recipe
        mv VocabSieve-x86_64.AppImage VocabSieve-v$(grep version setup.cfg | awk '{print $3}')-linux-amd64.AppImage
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Windows app (debug)
        path: |
          cx_freeze/*/dist/*
          *.AppImage